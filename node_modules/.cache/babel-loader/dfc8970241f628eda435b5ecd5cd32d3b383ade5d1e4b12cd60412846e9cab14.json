{"ast":null,"code":"var _jsxFileName = \"/Users/peko/Desktop/portfolio/quizzical/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Cover from './component/Cover';\nimport Quiz from './component/Quiz';\nimport { nanoid } from 'nanoid';\nimport { decode } from 'html-entities';\n\n// url : https://opentdb.com/api.php?amount=10&category=9\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [quizData, setQuizData] = useState({});\n  const [startQuiz, setStartQuiz] = useState(false);\n  const [showScore, setShowScore] = useState(false);\n  const url = \"https://opentdb.com/api.php?amount=10\";\n  // const quizDataList = []\n\n  useEffect(() => {\n    async function getData() {\n      const res = await fetch(url);\n      const data = await res.json();\n      data => {\n        const quizDataList = data.results.map(quiz => ({\n          ...quiz,\n          answers: [quiz.correct_answer, ...quiz.incorrect_answers].sort(() => Math.random() - 0.5)\n        }));\n        setQuizData(quizDataList);\n      };\n    }\n    getData();\n  }, []);\n  function x() {\n    for (let i = 0; i < quizData.length; i++) {\n      quizDataList.push({\n        id: nanoid(),\n        question: quizData[i].question,\n        answer: [quizData[i].correct_answer, quizData[i].incorrect_answers.map(ans => ans)],\n        correct_answer: quizData[i].correct_answer\n      });\n\n      // console.log(quizData)\n      // console.log(quizData[i].question)\n      // console.log(quizData[i].correct_answer)\n      // console.log(quizData[i].incorrect_answers.map(ans => quiz.quizDataList.answer.push(ans)))\n      // function(){\n      //   for(let j = 0; j < quizData[i].incorrect_answers.length; j++){\n      //     console.log(quizData[i].incorrect_answers[j])\n      //     // quizDataList.answer.push(quizData[i].incorrect_answers[j])\n      //   }\n      // }\n    }\n\n    console.log(quizDataList);\n  }\n  x();\n  function start() {\n    setStartQuiz(true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-yellow-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), startQuiz ? /*#__PURE__*/_jsxDEV(Quiz, {\n        quizData: quizData,\n        showScore: showScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(Cover, {\n        start: start\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 76\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-blue-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3Hw5QUmwDO4rVrF8Xckr53iLYOA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Cover","Quiz","nanoid","decode","App","quizData","setQuizData","startQuiz","setStartQuiz","showScore","setShowScore","url","getData","res","fetch","data","json","quizDataList","results","map","quiz","answers","correct_answer","incorrect_answers","sort","Math","random","x","i","length","push","id","question","answer","ans","console","log","start"],"sources":["/Users/peko/Desktop/portfolio/quizzical/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Cover from './component/Cover';\nimport Quiz from './component/Quiz';\nimport { nanoid } from 'nanoid';\nimport { decode } from 'html-entities';\n\n\n\n// url : https://opentdb.com/api.php?amount=10&category=9\n\nfunction App() {\n  const [quizData, setQuizData] = useState({})\n  const [startQuiz, setStartQuiz] = useState(false)\n  const [showScore, setShowScore] = useState(false)\n\n  const url = \"https://opentdb.com/api.php?amount=10\"\n  // const quizDataList = []\n  \n  useEffect(()=>{\n    async function getData(){\n      const res = await fetch(url)\n      const data = await res.json()\n      data => {\n        const quizDataList = data.results.map((quiz) => ({\n          ...quiz,\n          answers: [quiz.correct_answer, ...quiz.incorrect_answers].sort(()=> Math.random() - 0.5)\n        }))\n        setQuizData(quizDataList)\n      }\n    }\n    getData()\n  },[])\n\n  function x (){\n    for(let i = 0; i < quizData.length; i++){\n      quizDataList.push({\n        id: nanoid(),\n        question: quizData[i].question,\n        answer: [quizData[i].correct_answer, quizData[i].incorrect_answers.map(ans => ans)],\n        correct_answer: quizData[i].correct_answer\n      })\n      \n      // console.log(quizData)\n      // console.log(quizData[i].question)\n      // console.log(quizData[i].correct_answer)\n      // console.log(quizData[i].incorrect_answers.map(ans => quiz.quizDataList.answer.push(ans)))\n      // function(){\n      //   for(let j = 0; j < quizData[i].incorrect_answers.length; j++){\n      //     console.log(quizData[i].incorrect_answers[j])\n      //     // quizDataList.answer.push(quizData[i].incorrect_answers[j])\n      //   }\n      // }\n      \n    }\n    console.log(quizDataList)\n  }\n  \n  x()\n\n  function start(){\n    setStartQuiz(true)\n  }\n\n\n  return (\n    <main>\n      <div className=\"container\">\n        <div className=\"bg-yellow-block\"></div>\n          {startQuiz ? <Quiz quizData={quizData} showScore={showScore}/> : <Cover start={start}/>}\n        <div className=\"bg-blue-block\"></div>\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,IAAI,MAAM,kBAAkB;AACnC,SAASC,MAAM,QAAQ,QAAQ;AAC/B,SAASC,MAAM,QAAQ,eAAe;;AAItC;AAAA;AAEA,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMa,GAAG,GAAG,uCAAuC;EACnD;;EAEAZ,SAAS,CAAC,MAAI;IACZ,eAAea,OAAO,GAAE;MACtB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACH,GAAG,CAAC;MAC5B,MAAMI,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,EAAE;MAC7BD,IAAI,IAAI;QACN,MAAME,YAAY,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAEC,IAAI,KAAM;UAC/C,GAAGA,IAAI;UACPC,OAAO,EAAE,CAACD,IAAI,CAACE,cAAc,EAAE,GAAGF,IAAI,CAACG,iBAAiB,CAAC,CAACC,IAAI,CAAC,MAAKC,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG;QACzF,CAAC,CAAC,CAAC;QACHpB,WAAW,CAACW,YAAY,CAAC;MAC3B,CAAC;IACH;IACAL,OAAO,EAAE;EACX,CAAC,EAAC,EAAE,CAAC;EAEL,SAASe,CAAC,GAAG;IACX,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvB,QAAQ,CAACwB,MAAM,EAAED,CAAC,EAAE,EAAC;MACtCX,YAAY,CAACa,IAAI,CAAC;QAChBC,EAAE,EAAE7B,MAAM,EAAE;QACZ8B,QAAQ,EAAE3B,QAAQ,CAACuB,CAAC,CAAC,CAACI,QAAQ;QAC9BC,MAAM,EAAE,CAAC5B,QAAQ,CAACuB,CAAC,CAAC,CAACN,cAAc,EAAEjB,QAAQ,CAACuB,CAAC,CAAC,CAACL,iBAAiB,CAACJ,GAAG,CAACe,GAAG,IAAIA,GAAG,CAAC,CAAC;QACnFZ,cAAc,EAAEjB,QAAQ,CAACuB,CAAC,CAAC,CAACN;MAC9B,CAAC,CAAC;;MAEF;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAEF;;IACAa,OAAO,CAACC,GAAG,CAACnB,YAAY,CAAC;EAC3B;EAEAU,CAAC,EAAE;EAEH,SAASU,KAAK,GAAE;IACd7B,YAAY,CAAC,IAAI,CAAC;EACpB;EAGA,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,WAAW;MAAA,wBACxB;QAAK,SAAS,EAAC;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAO,EACpCD,SAAS,gBAAG,QAAC,IAAI;QAAC,QAAQ,EAAEF,QAAS;QAAC,SAAS,EAAEI;MAAU;QAAA;QAAA;QAAA;MAAA,QAAE,gBAAG,QAAC,KAAK;QAAC,KAAK,EAAE4B;MAAM;QAAA;QAAA;QAAA;MAAA,QAAE,eACzF;QAAK,SAAS,EAAC;MAAe;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA;EACjC;IAAA;IAAA;IAAA;EAAA,QACD;AAEX;AAAC,GA/DQjC,GAAG;AAAA,KAAHA,GAAG;AAiEZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}